from unittest import mock

HttpHeaders = mock.MagicMock(name="HttpSessionBindingEvent")
ServletInputStream = mock.MagicMock(name="ServletInputStream")
ServletOutputStream = mock.MagicMock(name="ServletOutputStream")
DelegatingServletInputStream = mock.MagicMock(name="DelegatingServletInputStream")
ResponseServletOutputStream = mock.MagicMock(name="ResponseServletOutputStream")
BufferedReader = mock.MagicMock(name="BufferedReader")
ByteArrayInputStream = mock.MagicMock(name="ByteArrayInputStream")
ByteArrayOutputStream = mock.MagicMock(name="ByteArrayOutputStream")
InputStreamReader = mock.MagicMock(name="InputStreamReader")
MediaType = mock.MagicMock(name="MediaType")
Locale = mock.MagicMock(name="Locale")
HttpSessionBindingEvent = mock.MagicMock(name="HttpSessionBindingEvent")
DispatcherType = mock.MagicMock(name="DispatcherType")
SessionTrackingMode = mock.MagicMock(name="SessionTrackingMode")
DefaultResourceLoader = mock.MagicMock(name="DefaultResourceLoader")
MediaTypeFactory = mock.MagicMock(name="MediaTypeFactory")
Resource = mock.MagicMock(name="Resource")
RequestDispatcher = mock.MagicMock(name="RequestDispatcher")
SessionCookieConfig = mock.MagicMock(name="SessionCookieConfig")
AsyncEvent = mock.MagicMock(name="AsyncEvent")
HttpStatus = mock.MagicMock(name="HttpStatus")
Ordered = mock.MagicMock(name="Ordered")
ServerWebExchange = mock.MagicMock(name="ServerWebExchange")
HandlerMapping = mock.MagicMock(name="HandlerMapping")
UriComponentsBuilder = mock.MagicMock(name="UriComponentsBuilder")
Pattern = mock.MagicMock(name="Pattern")
UriUtils = mock.MagicMock(name="UriUtils")
BeanUtils = mock.MagicMock(name="BeanUtils")
ServletRequest = mock.MagicMock(name="ServletRequest")
ServletRequestWrapper = mock.MagicMock(name="ServletRequestWrapper")
HttpSession = mock.MagicMock(name="HttpSession")
ServletContext = mock.MagicMock(name="ServletContext")
HttpServletRequest = mock.MagicMock(name="HttpServletRequest")
ResourceBundle = mock.MagicMock(name="ResourceBundle")
HeaderValueHolder = mock.MagicMock(name="HeaderValueHolder")
